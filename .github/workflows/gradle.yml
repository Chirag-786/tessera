name: Tessera Gradle Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GRADLE_CACHE_KEY: ${{ github.run_id }}-gradle-${{ github.run_number }}-${{ github.run_number }}-${{ github.sha }}
  DIST_TAR: tessera-dist/build/distributions/tessera-*.tar
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build -x dependencyCheckAnalyze -x javadoc -x test --info
    - uses: actions/upload-artifact@v1
      if: success()
      with:
        name: tessera-dists
        path: /home/runner/work/tessera/tessera/tessera-dist/build/distributions/
    - uses: actions/upload-artifact@v1
      with:
        name: enclave-dists
        path: /home/runner/work/tessera/tessera/enclave/enclave-jaxrs/build/distributions/
    - uses: actions/upload-artifact@v1
      with:
        name: aws-key-vault-dist
        path: /home/runner/work/tessera/tessera/key-vault/aws-key-vault/build/distributions/
    - uses: actions/upload-artifact@v1
      with:
        name: azure-key-vault-dist
        path: /home/runner/work/tessera/tessera/key-vault/azure-key-vault/build/distributions/
    - uses: actions/upload-artifact@v1
      with:
        name: hashicorp-key-vault-dist
        path: /home/runner/work/tessera/tessera/key-vault/hashicorp-key-vault/build/distributions/
    - uses: homoluctus/slatify@v3.0.0
      if: always()
      with:
        type: ${{job.status}}
        job_name: Build
        url: ${{ secrets.SLACK_WEBHOOK }}

  checkdependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11
    - run: ./gradlew dependencyCheckAnalyze -x test
    - uses: homoluctus/slatify@v3.0.0
      if: always()
      with:
        type: ${{job.status}}
        job_name: Dependency check
        url: ${{ secrets.SLACK_WEBHOOK }}

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
       distribution: 'adopt'
       java-version: 11
    - run: ./gradlew test -x dependencyCheckAnalyze -x :tests:acceptance-test:test -x javadoc -x :cli:config-cli:jacocoTestCoverageVerification --info
    - uses: homoluctus/slatify@v3.0.0
      if: always()
      with:
        type: ${{job.status}}
        job_name: Unit tests
        url: ${{ secrets.SLACK_WEBHOOK }}

  itest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11
    - run: |
        ./gradlew build -x dependencyCheckAnalyze -x javadoc -x test
        ./gradlew :tests:acceptance-test:clean :tests:acceptance-test:test -PexcludeTests="RunHashicorpIT,AwsKeyVaultIT,RecoverIT,AzureKeyVaultIT" --info
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
       name: itest-junit-report
       path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/reports/tests/
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
       name: itest-logs
       path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/logs
    - uses: homoluctus/slatify@v3.0.0
      if: always()
      with:
        type: ${{job.status}}
        job_name: itest
        url: ${{ secrets.SLACK_WEBHOOK }}

  vaultTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - run: |
          wget https://releases.hashicorp.com/vault/1.2.2/vault_1.2.2_linux_amd64.zip -O /tmp/vault_1.2.2_linux_amd64.zip
          mkdir -p vault/bin && pushd $_
          unzip /tmp/vault_1.2.2_linux_amd64.zip
          export PATH=$PATH:$PWD && popd
          ./gradlew build -x dependencyCheckAnalyze -x javadoc -x test
          ./gradlew :tests:acceptance-test:clean :tests:acceptance-test:test --tests RunHashicorpIT --tests AwsKeyVaultIT --tests AzureKeyVaultIT --info
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: vault-itest-junit-report
          path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/reports/tests/
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: vault-itest-logs
          path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/logs
      - uses: homoluctus/slatify@v3.0.0
        if: always()
        with:
          type: ${{job.status}}
          job_name: Key vault tests
          url: ${{ secrets.SLACK_WEBHOOK }}

  recovery_itest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - run: |
          ./gradlew build -x dependencyCheckAnalyze -x javadoc -x test
          ./gradlew :tests:acceptance-test:clean :tests:acceptance-test:test --tests RecoverIT
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: recovery_itest-junit-report
          path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/reports/tests/
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: recovery-itest-logs
          path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/logs
      - uses: homoluctus/slatify@v3.0.0
        if: always()
        with:
          type: ${{job.status}}
          job_name: Recovery integration tests
          url: ${{ secrets.SLACK_WEBHOOK }}

  atest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - run: |
          ./gradlew build -x test -x dependencyCheckAnalyze -x javadoc
          cp tessera-dist/build/distributions/tessera-*.tar tessera-dist/build/distributions/tessera.tar
          mkdir tessera-extracted && tar xvf tessera-dist/build/distributions/tessera.tar -C tessera-extracted --strip-components 1
      - name: 'Load custom AccTests Docker Image'
        run: |
          acctests_docker_image="prdfox/acctests:jigsaw"
          docker pull $acctests_docker_image
          # replacing the acctests image to run
          docker tag $acctests_docker_image quorumengineering/acctests:latest
      - uses: docker/build-push-action@v1
        with:
          repository: quorumengineering/tessera
          tags: develop
          push: false
          dockerfile: .github/workflows/noBuild.Dockerfile
          build_args: DIST=tessera-extracted
      - run:
          docker run --entrypoint /bin/sh --network host -v /tmp/run/sh:/tmp/run.sh -v /var/run/docker.sock:/var/run/docker.sock -v /tmp/acctests:/tmp/acctests quorumengineering/acctests:latest -c "mvn --no-transfer-progress -B -DskipToolsCheck test -Pauto -Dtags='\!async && (basic || basic-istanbul || networks/typical::istanbul)' -Dauto.outputDir=/tmp/acctests -Dnetwork.forceDestroy=true && cp -R /workspace/target/gauge /tmp/acctests/gauge && chmod -R 775 /tmp/acctests/gauge"
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: gauge-reports
          path: /tmp/acctests/gauge
      - uses: homoluctus/slatify@v3.0.0
        if: always()
        with:
          type: ${{job.status}}
          job_name: Acceptance tests
          url: ${{ secrets.SLACK_WEBHOOK }}